1. `$ helm repo index` command will create both index.yaml and index.json files
2. --merge-json-index will take up index.json, as a counterpart for --merge which takes index.yaml

discuss if this is needed. as json is a subset of yaml and every json is a valid
yaml, so --merge can take up a json too. And if we don't want to parse the json
differently (like fast and all), then we can just use --merge itself to get
the index.json

3. because of 2. only one of --merge or --merge-json-index can be used, NOT both

if 2 becomes invalid, this is invalid too :)

4. always have separate functions and stuff to handle index.json even though
yaml parser can understand json too. 

Have to ask maintainers about this - ? If we want to use a different parser for
json - not sure about the pros in some cases, like repo add, but I think it will
be useful for install and all, anyways, wherever different functions don't bring
too much or no pros, the con is - extra code, extra maintenance. so yeah, let's
see what the maintainers think about it. Note down the places where using the
existing yaml parser is the same thing as using the json one - in terms of
logic - that is, for example, if we want to parse the whole json similar to how
we were parsing the whole yaml - then it's the same thing - but some libs can
help with parsing the json partially and efficiently - anyways, but not sure if
json one will be faster though, like generally, compared to yaml one - if it is,
which is very possible as json vocabulary is smaller, then it's wow.
